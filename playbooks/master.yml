- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
    - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  # - name: Configure Docker Daemon I
  #   command: cd etc/systemd

  - name: Configure Docker Daemon II
    command: sudo mkdir docker.service.d

  - name: Configure Docker Daemon II
    command: cd docker.service.d && sudo touch hosts.conf

  - name: Insert multiple lines and Backup
    blockinfile:
      path: etc/systemd/docker.service.d/hosts.conf
      backup: yes
      block: |
        [Service]
        ExecStart=
        ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2736

  - name: Enable Docker on boot
    command: sudo systemctl enable docker

  - name: Reload Docker Daemon
    command: sudo systemctl daemon-reload

  - name: Restart Docker
    command: sudo systemctl restart docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
    - swap
    - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - kubelet
      - kubeadm
      - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
      # - name: Configure Docker Daemon
  #   shell: 
  #     cmd: 'cat <<EOF | sudo tee /etc/docker/daemon.json
  #              {
  #                "exec-opts": ["native.cgroupdriver=systemd"],
  #                "log-driver": "json-file",
  #                "log-opts": {
  #                "max-size": "100m"
  #               },
  #               "storage-driver": "overlay2"
  #              }
  #             EOF'    r-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
    - mkdir -p /home/vagrant/.kube
    - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Install calico pod network
    become: false
    command: kubectl create -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  handlers:
  - name: docker status
    service: name=docker state=started
